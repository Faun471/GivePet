plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group = 'me.faun'
version = '1.0'

repositories {
    mavenCentral()
    maven {
        name = 'papermc-repo'
        url = 'https://papermc.io/repo/repository/maven-public/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven {
        name = 'jitpack-io'
        url = 'https://jitpack.io'
    }
    maven {
        url = 'https://repo.triumphteam.dev/snapshots/'
    }
}

dependencies {
    compileOnly 'io.papermc.paper:paper-api:1.17.1-R0.1-SNAPSHOT'
    implementation 'net.kyori:adventure-api:4.9.3'
    implementation 'com.github.Obliviated:BlokSQLiteAPI:1.0.7-b'
    implementation 'me.mattstudios.utils:matt-framework:1.4.6'
    implementation 'me.mattstudios:triumph-msg-adventure:2.2.4-SNAPSHOT'
}

def targetJavaVersion = 16
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = '17.PREVIEW'
    targetCompatibility = '17.PREVIEW'
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

shadowJar {
    relocate 'me.mattstudios.mf', 'me.faun.givepet.mf'
    relocate 'mc.obliviate.bloksqliteapi', 'me.faun.givepet.bloksqliteapi'
    relocate 'me.mattstudios.msg', 'me.faun.givepet.mfmsg'
}